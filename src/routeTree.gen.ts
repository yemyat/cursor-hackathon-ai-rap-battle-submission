/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BattlesIndexRouteImport } from './routes/battles.index'
import { Route as BattlesCreateRouteImport } from './routes/battles.create'
import { Route as BattlesBattleIdRouteImport } from './routes/battles.$battleId'
import { Route as BattlesThemeThemeIdRouteImport } from './routes/battles.theme.$themeId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BattlesIndexRoute = BattlesIndexRouteImport.update({
  id: '/battles/',
  path: '/battles/',
  getParentRoute: () => rootRouteImport,
} as any)
const BattlesCreateRoute = BattlesCreateRouteImport.update({
  id: '/battles/create',
  path: '/battles/create',
  getParentRoute: () => rootRouteImport,
} as any)
const BattlesBattleIdRoute = BattlesBattleIdRouteImport.update({
  id: '/battles/$battleId',
  path: '/battles/$battleId',
  getParentRoute: () => rootRouteImport,
} as any)
const BattlesThemeThemeIdRoute = BattlesThemeThemeIdRouteImport.update({
  id: '/battles/theme/$themeId',
  path: '/battles/theme/$themeId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/battles/$battleId': typeof BattlesBattleIdRoute
  '/battles/create': typeof BattlesCreateRoute
  '/battles': typeof BattlesIndexRoute
  '/battles/theme/$themeId': typeof BattlesThemeThemeIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/battles/$battleId': typeof BattlesBattleIdRoute
  '/battles/create': typeof BattlesCreateRoute
  '/battles': typeof BattlesIndexRoute
  '/battles/theme/$themeId': typeof BattlesThemeThemeIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/battles/$battleId': typeof BattlesBattleIdRoute
  '/battles/create': typeof BattlesCreateRoute
  '/battles/': typeof BattlesIndexRoute
  '/battles/theme/$themeId': typeof BattlesThemeThemeIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/battles/$battleId'
    | '/battles/create'
    | '/battles'
    | '/battles/theme/$themeId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/battles/$battleId'
    | '/battles/create'
    | '/battles'
    | '/battles/theme/$themeId'
  id:
    | '__root__'
    | '/'
    | '/battles/$battleId'
    | '/battles/create'
    | '/battles/'
    | '/battles/theme/$themeId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BattlesBattleIdRoute: typeof BattlesBattleIdRoute
  BattlesCreateRoute: typeof BattlesCreateRoute
  BattlesIndexRoute: typeof BattlesIndexRoute
  BattlesThemeThemeIdRoute: typeof BattlesThemeThemeIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/battles/': {
      id: '/battles/'
      path: '/battles'
      fullPath: '/battles'
      preLoaderRoute: typeof BattlesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/battles/create': {
      id: '/battles/create'
      path: '/battles/create'
      fullPath: '/battles/create'
      preLoaderRoute: typeof BattlesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/battles/$battleId': {
      id: '/battles/$battleId'
      path: '/battles/$battleId'
      fullPath: '/battles/$battleId'
      preLoaderRoute: typeof BattlesBattleIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/battles/theme/$themeId': {
      id: '/battles/theme/$themeId'
      path: '/battles/theme/$themeId'
      fullPath: '/battles/theme/$themeId'
      preLoaderRoute: typeof BattlesThemeThemeIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BattlesBattleIdRoute: BattlesBattleIdRoute,
  BattlesCreateRoute: BattlesCreateRoute,
  BattlesIndexRoute: BattlesIndexRoute,
  BattlesThemeThemeIdRoute: BattlesThemeThemeIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
